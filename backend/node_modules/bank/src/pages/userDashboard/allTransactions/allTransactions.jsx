import React, { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { motion } from 'framer-motion';
import { 
  Typography, CircularProgress, Box, Container, Paper 
} from '@mui/material';
import { DataGrid, GridToolbar } from '@mui/x-data-grid';
import { getAllTransactions } from '../../../store/Transactions/transactionActions';
import Sidebar from '../../../components/layout/Sidebar/Sidebar';

const AllTransactionsPage = () => {
  const dispatch = useDispatch();
  const { transactions, loading } = useSelector(state => state.transactions);

  useEffect(() => {
    dispatch(getAllTransactions("664f0538ee2114220f466c01"));
  }, [dispatch]);

  const columns = [
    { field: 'date', headerName: 'Date', flex: 1, renderCell: (params) => new Date(params?.row?.createdAt).toLocaleDateString() },
    { field: 'type', headerName: 'Type', flex: 1 },
    { field: 'amount', headerName: 'Amount', flex: 1, renderCell: (params) => `$${params?.row?.amount.toFixed(2)}` },
    { field: 'transfer_type', headerName: 'Transfer Type', flex: 1 },
    { field: 'account', headerName: 'Account', flex: 1, renderCell: (params) => params?.row?.second_account || 'N/A' },
  ];

  const rows = transactions.map(transaction => ({
    id: transaction._id,
    createdAt: transaction?.createdAt,
    type: transaction.type,
    amount: transaction.amount,
    transfer_type: transaction.transfer_type,
    account: transaction.second_account,
  }));

  return (
    <div className="flex w-full">
      <Sidebar />
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.5 }}
        style={{ flexGrow: 1, padding: 20 }}
      >
        <Container maxWidth="lg">
          <Typography
            variant="h4"
            component="h1"
            gutterBottom
            className="font-bold pt-10"
          >
            All Transactions
          </Typography>

        {loading ? (
          <CircularProgress color="primary" />
        ) : (
          <TableContainer component={Paper} style={{ width: "100%" }}>
            <Table style={{ width: "100%" }}>
              <TableHead>
                <TableRow>
                  <StyledTableCell>Date</StyledTableCell>
                  <StyledTableCell>Type</StyledTableCell>
                  <StyledTableCell>Amount</StyledTableCell>
                  <StyledTableCell>transfer_type</StyledTableCell>
                  <StyledTableCell>Account</StyledTableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {transactions.map((transaction) => (
                  <StyledTableRow key={transaction._id}>
                    <TableCell>
                      {new Date(transaction.createdAt).toLocaleDateString()}
                    </TableCell>
                    <TableCell>{transaction.type}</TableCell>
                    <TableCell>{`$${transaction.amount}`}</TableCell>
                    <TableCell>{transaction.transfer_type}</TableCell>
                    <TableCell>
                      {transaction.second_account?.user?.name || "N/A"}
                    </TableCell>
                  </StyledTableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
        )}
      </motion.div>
    </div>
  );
};

export default AllTransactionsPage;
